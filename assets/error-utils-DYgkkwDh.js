function c(r,s={}){const e=a(r,s),t=Math.random().toString(36).slice(2,10);try{sessionStorage.setItem("ws_err_"+t,JSON.stringify(e))}catch{}const o=new URLSearchParams({key:t,status:String(e.status||""),title:e.title||"Error",message:(e.message||"").slice(0,300),rid:e.requestId||"",ts:String(Date.now()),page:location.href});location.href=`./error.html?${o.toString()}`}async function u(r,s){const e=await fetch(r,s);let t=null;if((e.headers.get("content-type")||"").includes("application/json"))try{t=await e.json()}catch{}else t=await e.text();if(!e.ok||t&&typeof t=="object"&&"error"in t){const n=new Error(t&&t.error||e.statusText||"Request failed");throw n.status=e.status||void 0,n.response=e,n.body=t,n}return t}function a(r,s){const e=r?.response,t=e?.headers?.get?.("x-request-id")||e?.headers?.get?.("request-id")||s.requestId;return{status:r?.status??e?.status??s.status,title:s.title||"Request error",message:r?.message||s.message,requestId:t,when:new Date().toISOString(),page:s.page||location.href,userAgent:navigator.userAgent,extra:{body:r?.body??void 0}}}export{c as r,u as s};
