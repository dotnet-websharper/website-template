import"./main-zI4Fsy3Y.js";/* empty css              */const f=new URLSearchParams(location.search).get("sub")||"demo-sub-1";localStorage.getItem("if_api_token");const n=t=>document.getElementById(t),o=n("seatsBody");let l=null,c=[],r=new Map;const h=t=>{if(typeof t!="string")return!1;const e=t.trim();return!(!e||!/^[A-Za-z0-9-]{1,39}$/.test(e)||e.startsWith("-")||e.endsWith("-")||e.includes("--"))},v=t=>t&&typeof t=="string"?t.trim().toLowerCase():null;function w(t,e){const a=e>0?Math.round(t/e*100):0;n("seatProgress").style.width=a+"%";const s=Math.max(e-t,0);n("seatsBadge").textContent=`${t} assigned, ${s} available`}function g(t){const e=n("toast");e.textContent=t,e.classList.remove("hidden"),setTimeout(()=>e.classList.add("hidden"),1600)}function d(t){n("spinner").classList.toggle("hidden",!t)}function u(){n("saveAll").disabled=r.size===0}window.addEventListener("beforeunload",t=>{r.size>0&&t.preventDefault()});async function _(t){return new Promise(e=>setTimeout(()=>e({id:t,plan:"Professional",seats_total:5,seats_used:2,renews_at:"2026-01-01",status:"active",account_name:"acme-inc"}),200))}async function y(t){return new Promise(e=>setTimeout(()=>e([{seat_id:"s1",github_login:"alice",status:"assigned",assigned_at:"2025-01-01"},{seat_id:"s2",github_login:"bob-dev",status:"assigned",assigned_at:"2025-01-03"},{seat_id:"s3",github_login:null,status:"unassigned"},{seat_id:"s4",github_login:null,status:"unassigned"},{seat_id:"s5",github_login:null,status:"unassigned"}]),200))}async function x(t,e){return new Promise(a=>setTimeout(()=>a({ok:!0,seats:e}),250))}function $(t){if(!t)return"-";try{return new Date(t).toLocaleDateString(void 0,{year:"numeric",month:"short",day:"2-digit"})}catch{return t}}function p(){n("planName").textContent=l.plan,n("seatsTotal").textContent=l.seats_total;const t=c.filter(e=>!!e.github_login).length;n("seatsUsed").textContent=t,n("renewsAt").textContent=$(l.renews_at),n("subStatus").textContent=l.status,n("accountName").textContent=l.account_name||"-",w(t,l.seats_total)}function k(t,e){const a=`seat-${t.seat_id}`,s=t.github_login??"",i=t.github_login?"assigned":"unassigned";return`
<tr data-seat-row="${t.seat_id}">
<td class="px-4 py-3">#${e+1}</td>
<td class="px-4 py-2">
    <div class="flex items-center gap-2">
    <label class="sr-only" for="${a}">GitHub username for seat #${e+1}</label>
    <span class="text-gray-400">@</span>
    <input id="${a}" data-seat="${t.seat_id}" value="${s}" placeholder="unassigned"
            class="w-full rounded-md border border-gray-300 dark:border-gray-800 bg-transparent px-2 py-1"/>
    </div>
    <p class="mt-1 hidden text-xs text-red-600" id="err-${t.seat_id}">Invalid GitHub username</p>
</td>
<td class="px-4 py-3 capitalize">${i}</td>
<td class="px-4 py-2 text-right">
    <button data-action="unassign" data-seat="${t.seat_id}"
    class="text-sm underline text-gray-600 dark:text-gray-300 ${t.github_login?"":"opacity-30 pointer-events-none"}">
    Unassign
    </button>
</td>
</tr>`}function m(){o.innerHTML=c.map(k).join("")}function S(){o.addEventListener("input",t=>{if(!t.target.matches("input[data-seat]"))return;const e=t.target.dataset.seat,a=v(t.target.value),s=n(`err-${e}`);a&&!h(a)?(t.target.classList.add("ring-1","ring-red-500"),s==null||s.classList.remove("hidden")):(t.target.classList.remove("ring-1","ring-red-500"),s==null||s.classList.add("hidden")),r.set(e,a||null),u()}),o.addEventListener("click",t=>{var s;if(!t.target.matches('button[data-action="unassign"]'))return;const e=t.target.dataset.seat,a=o.querySelector(`input[data-seat="${e}"]`);a.value="",a.classList.remove("ring-1","ring-red-500"),(s=n(`err-${e}`))==null||s.classList.add("hidden"),r.set(e,null),u()})}n("applyBulk").addEventListener("click",()=>{const t=n("bulkBox").value.trim();if(!t)return;const e=t.split(/[\s,]+/).map(i=>v(i)).filter(Boolean);if(e.filter(i=>!h(i)).length){n("bulkError").classList.remove("hidden");return}n("bulkError").classList.add("hidden");const s=c.filter(i=>!i.github_login);for(let i=0;i<s.length&&i<e.length;i++){const b=s[i].seat_id,L=o.querySelector(`input[data-seat="${b}"]`);L.value=e[i],r.set(b,e[i])}u()});n("clearBulk").addEventListener("click",()=>{n("bulkBox").value="",n("bulkError").classList.add("hidden")});n("refresh").addEventListener("click",async()=>{d(!0),r.clear(),l=await _(f),c=await y(),p(),m(),u(),d(!1)});n("saveAll").addEventListener("click",async()=>{var e;const t=Array.from(r.entries()).map(([a,s])=>({seat_id:a,github_login:s,action:s?"assign":"unassign"}));if(!t.length)return g("Nothing to save");for(const[a,s]of r.entries())if(s&&!h(s)){const i=o.querySelector(`input[data-seat="${a}"]`);i==null||i.classList.add("ring-1","ring-red-500"),(e=n(`err-${a}`))==null||e.classList.remove("hidden"),g("Fix invalid usernames");return}d(!0);try{await x(f,t),t.forEach(a=>{const s=c.find(i=>i.seat_id===a.seat_id);s.github_login=a.github_login}),r.clear(),p(),m(),t.forEach(a=>{const s=o.querySelector(`[data-seat-row="${a.seat_id}"]`);s==null||s.classList.add("bg-yellow-50","dark:bg-yellow-900/20"),setTimeout(()=>s==null?void 0:s.classList.remove("bg-yellow-50","dark:bg-yellow-900/20"),800)}),u(),g("Saved")}catch(a){console.error(a),g("Save failed")}finally{d(!1)}});(async function(){d(!0),l=await _(f),c=await y(),p(),m(),S(),u(),d(!1)})();
